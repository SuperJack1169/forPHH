အခန်း ၁ — မိတ်ဆက် (Introduction)

📌 နောက်ခံ (Background)

ယခုခေတ်မှာ အဖန်အလွန်ရှုပ်ထွေးလာတဲ့ Project များစတင်တဲ့အခါ၊ back-up strategy မပါဘဲ စတင်မယ်ဆိုတာ အာရုံစိုက်တတ်တဲ့ developer တစ်ယောက် မလုပ်ချင်တဲ့အရာဖြစ်လာပါတယ်။ အချက်အလက်တွေက မတည်တံ့တဲ့အရာတွေဖြစ်ပြီး၊ code တစ်ကြောင်းမှားရေးခြင်းတစ်ခုကြောင့်ပဲဖြစ်ဖြစ်၊ disk ပျက်ခြင်းကြောင့်ပဲဖြစ်ဖြစ် ပျက်စီးနိုင်တာကြောင့် အမြဲအသုံးပြုနိုင်တဲ့ မူရင်းသမိုင်းရှိတဲ့ archive တစ်ခုကို ထိန်းသိမ်းထားတာက တန်ဖိုးရှိပါတယ်။

အထူးသဖြင့် စာသား၊ source code project တွေအတွက် back-up strategy မှာ version control ကိုသုံးတဲ့အခါမျိုးများပါတယ်။ Developer တစ်ယောက်အနေနဲ့ တစ်နေ့လျှင် version တစ်ချို့ ပြောင်းလဲတတ်ပြီး၊ တဖြည်းဖြည်းနဲ့ မူရင်းဖိုင်တွေအများကြီးဖြစ်လာတဲ့အခါ အဲဒီလိုပြောင်းလဲမှုတွေကို သိမ်းဆည်းဖော်ပြဖို့အတွက် version control system (VCS) ဟာ repository, communication channel, project timeline, team collaboration tool တို့အဖြစ် တစ်ပြိုင်တည်းအသုံးပြုနိုင်တဲ့ နည်းလမ်းကောင်းတစ်ခုဖြစ်လာပါတယ်။

Version Control System (VCS) ဆိုတာကတော့ software source code ဖြစ်စေ၊ အခြား digital content ဖြစ်စေ အမျိုးမျိုးသော version များကို စီမံထိန်းချုပ်ပေးနိုင်တဲ့အရာ ဖြစ်ပါတယ်။ တခြားအမည်များအနေနဲ့ — source code manager (SCM), revision control system (RCS) စသဖြင့်ခေါ်ကြပါတယ်။ အသုံးပြုသူတွေ၊ စီမံသူတွေဟာ term များကို မတူညီစွာခေါ်နိုင်ပေမယ့် အခြေခံ concept ကတော့ တူပါတယ်။  
ဒါကတော့ အဓိကသုံးချက် ၃ ခုပါပဲ။  
1. Content repository တစ်ခု တည်ဆောက်ခြင်း
2. မျှော်လင့်ထားသော version များကို လွယ်လွယ်ကူကူ ပြန်လည်ကြည့်နိုင်ခြင်း
3. ပြောင်းလဲမှုများကိုမှတ်တမ်းတင်ခြင်း

🔧 Git ဘာလဲ?

ဒီစာအုပ်မှာတော့ Git ဆိုတဲ့ VCS တစ်ခုအကြောင်းကို အဓိကဖော်ပြထားပါတယ်။ Git ဟာ အစွမ်းထက်တဲ့, လိုအပ်သောအခါမှာ ထိန်းချုပ်မှုနည်းသော tool တစ်ခုဖြစ်ပြီး team collaboration အတွက် အလွန်အဆင်ပြေပါတယ်။ Git ကို Linus Torvalds (Linux Kernel creator) က Linux Kernel ကို တိုးတက်ဖွံ့ဖြိုးအောင် ဆောင်ရွက်ဖို့အတွက် တီထွင်ခဲ့တာပါ။  
နောက်ပြီး Git ဟာ အခြား project များအတွက်ပါ သုံးနိုင်တဲ့အထိ ကျယ်ပြန့်လာခဲ့ပါတယ်။
